//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiitEmailService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email", ConfigurationName="FiitEmailService.EmailPortType")]
    public interface EmailPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/#notify", ReplyAction="*")]
        System.Threading.Tasks.Task<FiitEmailService.notifyResponse> notifyAsync(FiitEmailService.notifyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/#getPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<FiitEmailService.getPriceResponse> getPriceAsync(FiitEmailService.getPriceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="notify", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/types", IsWrapped=true)]
    public partial class notifyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string team_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string message;
        
        public notifyRequest()
        {
        }
        
        public notifyRequest(string team_id, string password, string email, string subject, string message)
        {
            this.team_id = team_id;
            this.password = password;
            this.email = email;
            this.subject = subject;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="notifyResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/types", IsWrapped=true)]
    public partial class notifyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool success;
        
        public notifyResponse()
        {
        }
        
        public notifyResponse(bool success)
        {
            this.success = success;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPrice", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/types", IsWrapped=true)]
    public partial class getPriceRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int amount;
        
        public getPriceRequest()
        {
        }
        
        public getPriceRequest(int amount)
        {
            this.amount = amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPriceResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/notificationservices/email/types", IsWrapped=true)]
    public partial class getPriceResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double price;
        
        public getPriceResponse()
        {
        }
        
        public getPriceResponse(double price)
        {
            this.price = price;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface EmailPortTypeChannel : FiitEmailService.EmailPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class EmailPortTypeClient : System.ServiceModel.ClientBase<FiitEmailService.EmailPortType>, FiitEmailService.EmailPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EmailPortTypeClient() : 
                base(EmailPortTypeClient.GetDefaultBinding(), EmailPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.EmailPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EmailPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(EmailPortTypeClient.GetBindingForEndpoint(endpointConfiguration), EmailPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EmailPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EmailPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EmailPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EmailPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EmailPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitEmailService.notifyResponse> FiitEmailService.EmailPortType.notifyAsync(FiitEmailService.notifyRequest request)
        {
            return base.Channel.notifyAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitEmailService.notifyResponse> notifyAsync(string team_id, string password, string email, string subject, string message)
        {
            FiitEmailService.notifyRequest inValue = new FiitEmailService.notifyRequest();
            inValue.team_id = team_id;
            inValue.password = password;
            inValue.email = email;
            inValue.subject = subject;
            inValue.message = message;
            return ((FiitEmailService.EmailPortType)(this)).notifyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitEmailService.getPriceResponse> FiitEmailService.EmailPortType.getPriceAsync(FiitEmailService.getPriceRequest request)
        {
            return base.Channel.getPriceAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitEmailService.getPriceResponse> getPriceAsync(int amount)
        {
            FiitEmailService.getPriceRequest inValue = new FiitEmailService.getPriceRequest();
            inValue.amount = amount;
            return ((FiitEmailService.EmailPortType)(this)).getPriceAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EmailPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EmailPort))
            {
                return new System.ServiceModel.EndpointAddress("http://pis.predmety.fiit.stuba.sk/pis/ws/NotificationServices/Email");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EmailPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.EmailPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EmailPortTypeClient.GetEndpointAddress(EndpointConfiguration.EmailPort);
        }
        
        public enum EndpointConfiguration
        {
            
            EmailPort,
        }
    }
}
