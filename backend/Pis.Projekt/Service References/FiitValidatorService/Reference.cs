//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiitValidatorService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/validator", ConfigurationName="FiitValidatorService.ValidatorPortType")]
    public interface ValidatorPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/validator/#validateEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<FiitValidatorService.validateEmailResponse> validateEmailAsync(FiitValidatorService.validateEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/validator/#validatePhone", ReplyAction="*")]
        System.Threading.Tasks.Task<FiitValidatorService.validatePhoneResponse> validatePhoneAsync(FiitValidatorService.validatePhoneRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validateEmail", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/validator/types", IsWrapped=true)]
    public partial class validateEmailRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string email;
        
        public validateEmailRequest()
        {
        }
        
        public validateEmailRequest(string email)
        {
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validateEmailResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/validator/types", IsWrapped=true)]
    public partial class validateEmailResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool success;
        
        public validateEmailResponse()
        {
        }
        
        public validateEmailResponse(bool success)
        {
            this.success = success;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validatePhone", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/validator/types", IsWrapped=true)]
    public partial class validatePhoneRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string phone;
        
        public validatePhoneRequest()
        {
        }
        
        public validatePhoneRequest(string phone)
        {
            this.phone = phone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validatePhoneResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/validator/types", IsWrapped=true)]
    public partial class validatePhoneResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool success;
        
        public validatePhoneResponse()
        {
        }
        
        public validatePhoneResponse(bool success)
        {
            this.success = success;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface ValidatorPortTypeChannel : FiitValidatorService.ValidatorPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class ValidatorPortTypeClient : System.ServiceModel.ClientBase<FiitValidatorService.ValidatorPortType>, FiitValidatorService.ValidatorPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ValidatorPortTypeClient() : 
                base(ValidatorPortTypeClient.GetDefaultBinding(), ValidatorPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ValidatorPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidatorPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(ValidatorPortTypeClient.GetBindingForEndpoint(endpointConfiguration), ValidatorPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidatorPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ValidatorPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidatorPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ValidatorPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidatorPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitValidatorService.validateEmailResponse> FiitValidatorService.ValidatorPortType.validateEmailAsync(FiitValidatorService.validateEmailRequest request)
        {
            return base.Channel.validateEmailAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitValidatorService.validateEmailResponse> validateEmailAsync(string email)
        {
            FiitValidatorService.validateEmailRequest inValue = new FiitValidatorService.validateEmailRequest();
            inValue.email = email;
            return ((FiitValidatorService.ValidatorPortType)(this)).validateEmailAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitValidatorService.validatePhoneResponse> FiitValidatorService.ValidatorPortType.validatePhoneAsync(FiitValidatorService.validatePhoneRequest request)
        {
            return base.Channel.validatePhoneAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitValidatorService.validatePhoneResponse> validatePhoneAsync(string phone)
        {
            FiitValidatorService.validatePhoneRequest inValue = new FiitValidatorService.validatePhoneRequest();
            inValue.phone = phone;
            return ((FiitValidatorService.ValidatorPortType)(this)).validatePhoneAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ValidatorPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ValidatorPort))
            {
                return new System.ServiceModel.EndpointAddress("http://pis.predmety.fiit.stuba.sk/pis/ws/Validator");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ValidatorPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.ValidatorPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ValidatorPortTypeClient.GetEndpointAddress(EndpointConfiguration.ValidatorPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ValidatorPort,
        }
    }
}
