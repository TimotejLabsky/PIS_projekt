//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiitCalendarService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar", ConfigurationName="FiitCalendarService.CalendarPortType")]
    public interface CalendarPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#calculateAge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.calculateAgeResponse> calculateAgeAsync(FiitCalendarService.calculateAgeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#getNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.getNamesResponse> getNamesAsync(FiitCalendarService.getNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#getSunrise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.getSunriseResponse> getSunriseAsync(FiitCalendarService.getSunriseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#getSunset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.getSunsetResponse> getSunsetAsync(FiitCalendarService.getSunsetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#isFree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.isFreeResponse> isFreeAsync(FiitCalendarService.isFreeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#isWeekend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.isWeekendResponse> isWeekendAsync(FiitCalendarService.isWeekendRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#getCurrentDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.getCurrentDateResponse> getCurrentDateAsync(FiitCalendarService.getCurrentDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pis.predmety.fiit.stuba.sk/pis/calendar/#convertIntervalToDays", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<FiitCalendarService.convertIntervalToDaysResponse> convertIntervalToDaysAsync(FiitCalendarService.convertIntervalToDaysRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="calculateAge", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class calculateAgeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int birth_year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int birth_month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int birth_day;
        
        public calculateAgeRequest()
        {
        }
        
        public calculateAgeRequest(int birth_year, int birth_month, int birth_day)
        {
            this.birth_year = birth_year;
            this.birth_month = birth_month;
            this.birth_day = birth_day;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="calculateAgeResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class calculateAgeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int vek;
        
        public calculateAgeResponse()
        {
        }
        
        public calculateAgeResponse(int vek)
        {
            this.vek = vek;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getNames", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getNamesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day;
        
        public getNamesRequest()
        {
        }
        
        public getNamesRequest(int month, int day)
        {
            this.month = month;
            this.day = day;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getNamesResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getNamesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mena", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] mena;
        
        public getNamesResponse()
        {
        }
        
        public getNamesResponse(string[] mena)
        {
            this.mena = mena;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSunrise", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getSunriseRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day;
        
        public getSunriseRequest()
        {
        }
        
        public getSunriseRequest(int month, int day)
        {
            this.month = month;
            this.day = day;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSunriseResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getSunriseResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sunrise;
        
        public getSunriseResponse()
        {
        }
        
        public getSunriseResponse(string sunrise)
        {
            this.sunrise = sunrise;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSunset", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getSunsetRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day;
        
        public getSunsetRequest()
        {
        }
        
        public getSunsetRequest(int month, int day)
        {
            this.month = month;
            this.day = day;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSunsetResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getSunsetResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sunset;
        
        public getSunsetResponse()
        {
        }
        
        public getSunsetResponse(string sunset)
        {
            this.sunset = sunset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isFree", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class isFreeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day;
        
        public isFreeRequest()
        {
        }
        
        public isFreeRequest(int month, int day)
        {
            this.month = month;
            this.day = day;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isFreeResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class isFreeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool is_free;
        
        public isFreeResponse()
        {
        }
        
        public isFreeResponse(bool is_free)
        {
            this.is_free = is_free;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isWeekend", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class isWeekendRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string datetime;
        
        public isWeekendRequest()
        {
        }
        
        public isWeekendRequest(string datetime)
        {
            this.datetime = datetime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isWeekendResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class isWeekendResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool je_vikend;
        
        public isWeekendResponse()
        {
        }
        
        public isWeekendResponse(bool je_vikend)
        {
            this.je_vikend = je_vikend;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCurrentDate", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getCurrentDateRequest
    {
        
        public getCurrentDateRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCurrentDateResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class getCurrentDateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string date;
        
        public getCurrentDateResponse()
        {
        }
        
        public getCurrentDateResponse(string date)
        {
            this.date = date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="convertIntervalToDays", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class convertIntervalToDaysRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string date1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string date2;
        
        public convertIntervalToDaysRequest()
        {
        }
        
        public convertIntervalToDaysRequest(string date1, string date2)
        {
            this.date1 = date1;
            this.date2 = date2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="convertIntervalToDaysResponse", WrapperNamespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", IsWrapped=true)]
    public partial class convertIntervalToDaysResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://pis.predmety.fiit.stuba.sk/pis/calendar/types", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int days;
        
        public convertIntervalToDaysResponse()
        {
        }
        
        public convertIntervalToDaysResponse(int days)
        {
            this.days = days;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface CalendarPortTypeChannel : FiitCalendarService.CalendarPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class CalendarPortTypeClient : System.ServiceModel.ClientBase<FiitCalendarService.CalendarPortType>, FiitCalendarService.CalendarPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CalendarPortTypeClient() : 
                base(CalendarPortTypeClient.GetDefaultBinding(), CalendarPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.CalendarPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(CalendarPortTypeClient.GetBindingForEndpoint(endpointConfiguration), CalendarPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CalendarPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CalendarPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.calculateAgeResponse> FiitCalendarService.CalendarPortType.calculateAgeAsync(FiitCalendarService.calculateAgeRequest request)
        {
            return base.Channel.calculateAgeAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.calculateAgeResponse> calculateAgeAsync(int birth_year, int birth_month, int birth_day)
        {
            FiitCalendarService.calculateAgeRequest inValue = new FiitCalendarService.calculateAgeRequest();
            inValue.birth_year = birth_year;
            inValue.birth_month = birth_month;
            inValue.birth_day = birth_day;
            return ((FiitCalendarService.CalendarPortType)(this)).calculateAgeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.getNamesResponse> FiitCalendarService.CalendarPortType.getNamesAsync(FiitCalendarService.getNamesRequest request)
        {
            return base.Channel.getNamesAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.getNamesResponse> getNamesAsync(int month, int day)
        {
            FiitCalendarService.getNamesRequest inValue = new FiitCalendarService.getNamesRequest();
            inValue.month = month;
            inValue.day = day;
            return ((FiitCalendarService.CalendarPortType)(this)).getNamesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.getSunriseResponse> FiitCalendarService.CalendarPortType.getSunriseAsync(FiitCalendarService.getSunriseRequest request)
        {
            return base.Channel.getSunriseAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.getSunriseResponse> getSunriseAsync(int month, int day)
        {
            FiitCalendarService.getSunriseRequest inValue = new FiitCalendarService.getSunriseRequest();
            inValue.month = month;
            inValue.day = day;
            return ((FiitCalendarService.CalendarPortType)(this)).getSunriseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.getSunsetResponse> FiitCalendarService.CalendarPortType.getSunsetAsync(FiitCalendarService.getSunsetRequest request)
        {
            return base.Channel.getSunsetAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.getSunsetResponse> getSunsetAsync(int month, int day)
        {
            FiitCalendarService.getSunsetRequest inValue = new FiitCalendarService.getSunsetRequest();
            inValue.month = month;
            inValue.day = day;
            return ((FiitCalendarService.CalendarPortType)(this)).getSunsetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.isFreeResponse> FiitCalendarService.CalendarPortType.isFreeAsync(FiitCalendarService.isFreeRequest request)
        {
            return base.Channel.isFreeAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.isFreeResponse> isFreeAsync(int month, int day)
        {
            FiitCalendarService.isFreeRequest inValue = new FiitCalendarService.isFreeRequest();
            inValue.month = month;
            inValue.day = day;
            return ((FiitCalendarService.CalendarPortType)(this)).isFreeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.isWeekendResponse> FiitCalendarService.CalendarPortType.isWeekendAsync(FiitCalendarService.isWeekendRequest request)
        {
            return base.Channel.isWeekendAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.isWeekendResponse> isWeekendAsync(string datetime)
        {
            FiitCalendarService.isWeekendRequest inValue = new FiitCalendarService.isWeekendRequest();
            inValue.datetime = datetime;
            return ((FiitCalendarService.CalendarPortType)(this)).isWeekendAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.getCurrentDateResponse> FiitCalendarService.CalendarPortType.getCurrentDateAsync(FiitCalendarService.getCurrentDateRequest request)
        {
            return base.Channel.getCurrentDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.getCurrentDateResponse> getCurrentDateAsync()
        {
            FiitCalendarService.getCurrentDateRequest inValue = new FiitCalendarService.getCurrentDateRequest();
            return ((FiitCalendarService.CalendarPortType)(this)).getCurrentDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FiitCalendarService.convertIntervalToDaysResponse> FiitCalendarService.CalendarPortType.convertIntervalToDaysAsync(FiitCalendarService.convertIntervalToDaysRequest request)
        {
            return base.Channel.convertIntervalToDaysAsync(request);
        }
        
        public System.Threading.Tasks.Task<FiitCalendarService.convertIntervalToDaysResponse> convertIntervalToDaysAsync(string date1, string date2)
        {
            FiitCalendarService.convertIntervalToDaysRequest inValue = new FiitCalendarService.convertIntervalToDaysRequest();
            inValue.date1 = date1;
            inValue.date2 = date2;
            return ((FiitCalendarService.CalendarPortType)(this)).convertIntervalToDaysAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CalendarPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CalendarPort))
            {
                return new System.ServiceModel.EndpointAddress("http://pis.predmety.fiit.stuba.sk/pis/ws/Calendar");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CalendarPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.CalendarPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CalendarPortTypeClient.GetEndpointAddress(EndpointConfiguration.CalendarPort);
        }
        
        public enum EndpointConfiguration
        {
            
            CalendarPort,
        }
    }
}
